const mongoose = require('mongoose');
const User = require('../models/User');
require('dotenv').config();

// Tokyo area coordinates for realistic testing
const tokyoCenter = { lat: 35.6762, lng: 139.6503 };

const mapUsers = [
  {
    name: "Áî∞‰∏≠Â§™ÈÉé",
    phoneNumber: "+81901234567",
    gender: "male",
    address: "Êù±‰∫¨ÈÉΩÊ∏ãË∞∑Âå∫",
    location: {
      type: 'Point',
      coordinates: [139.6503, 35.6762] // Shibuya
    },
    profilePhoto: "https://randomuser.me/api/portraits/men/1.jpg",
    bio: "„Åì„Çì„Å´„Å°„ÅØÔºÅÊò†Áîª„Å®Ë™≠Êõ∏„ÅåÂ•Ω„Åç„Åß„Åô„ÄÇ",
    smsVerified: true,
    isOnline: true,
    matchCount: 3,
    actualMeetCount: 1
  },
  {
    name: "‰ΩêËó§Ëä±Â≠ê",
    phoneNumber: "+81901234568",
    gender: "female",
    address: "Êù±‰∫¨ÈÉΩÊñ∞ÂÆøÂå∫",
    location: {
      type: 'Point',
      coordinates: [139.7036, 35.6938] // Shinjuku
    },
    profilePhoto: "https://randomuser.me/api/portraits/women/1.jpg",
    bio: "„Ç´„Éï„ÇßÂ∑°„Çä„Å®„É®„Ç¨„ÅåË∂£Âë≥„Åß„Åô‚ô™",
    smsVerified: true,
    isOnline: true,
    matchCount: 5,
    actualMeetCount: 2
  },
  {
    name: "Èà¥Êú®‰∏ÄÈÉé",
    phoneNumber: "+81901234569",
    gender: "male",
    address: "Êù±‰∫¨ÈÉΩÊ∏ØÂå∫",
    location: {
      type: 'Point',
      coordinates: [139.7525, 35.6654] // Roppongi
    },
    profilePhoto: "https://randomuser.me/api/portraits/men/2.jpg",
    bio: "ITÈñ¢‰øÇ„ÅÆ‰ªï‰∫ã„Çí„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Çà„Çç„Åó„Åè„ÅäÈ°ò„ÅÑ„Åó„Åæ„ÅôÔºÅ",
    smsVerified: true,
    isOnline: false,
    matchCount: 2,
    actualMeetCount: 0,
    lastSeen: new Date(Date.now() - 1000 * 60 * 30) // 30 minutes ago
  },
  {
    name: "È´òÊ©ãÁæéÂí≤",
    phoneNumber: "+81901234570",
    gender: "female",
    address: "Êù±‰∫¨ÈÉΩÂìÅÂ∑ùÂå∫",
    location: {
      type: 'Point',
      coordinates: [139.7281, 35.6284] // Shinagawa
    },
    profilePhoto: "https://randomuser.me/api/portraits/women/2.jpg",
    bio: "ÊñôÁêÜ„Å®ÊóÖË°å„ÅåÂ§ßÂ•Ω„Åç„Åß„ÅôÔºÅ",
    smsVerified: true,
    isOnline: true,
    matchCount: 7,
    actualMeetCount: 3
  },
  {
    name: "‰ºäËó§ÂÅ•Â§™",
    phoneNumber: "+81901234571",
    gender: "male",
    address: "Êù±‰∫¨ÈÉΩÂè∞Êù±Âå∫",
    location: {
      type: 'Point',
      coordinates: [139.7786, 35.7123] // Ueno
    },
    profilePhoto: "https://randomuser.me/api/portraits/men/3.jpg",
    bio: "„Çπ„Éù„Éº„ÉÑÂÖ®Ëà¨Â•Ω„Åç„Åß„Åô„ÄÇ‰∏ÄÁ∑í„Å´ÈÅãÂãï„Åó„Åæ„Åõ„Çì„ÅãÔºü",
    smsVerified: true,
    isOnline: true,
    matchCount: 4,
    actualMeetCount: 2
  },
  {
    name: "Â±±Áî∞Áî±Áæé",
    phoneNumber: "+81901234572",
    gender: "female",
    address: "Êù±‰∫¨ÈÉΩÊñá‰∫¨Âå∫",
    location: {
      type: 'Point',
      coordinates: [139.7513, 35.7089] // Bunkyo
    },
    profilePhoto: "https://randomuser.me/api/portraits/women/3.jpg",
    bio: "„Ç¢„Éº„Éà„Å®Èü≥Ê•Ω„ÅåÂ•Ω„Åç„Å™‰ºöÁ§æÂì°„Åß„Åô„ÄÇ",
    smsVerified: true,
    isOnline: false,
    matchCount: 6,
    actualMeetCount: 1,
    lastSeen: new Date(Date.now() - 1000 * 60 * 60 * 2) // 2 hours ago
  },
  {
    name: "‰∏≠ÊùëÈõÑÂ§ß",
    phoneNumber: "+81901234573",
    gender: "male",
    address: "Êù±‰∫¨ÈÉΩÁõÆÈªíÂå∫",
    location: {
      type: 'Point',
      coordinates: [139.6983, 35.6333] // Meguro
    },
    profilePhoto: "https://randomuser.me/api/portraits/men/4.jpg",
    bio: "„Ç≤„Éº„É†„Å®„Ç¢„Éã„É°„ÅåË∂£Âë≥„Åß„ÅôÔºÅÂêå„ÅòË∂£Âë≥„ÅÆ‰∫∫„Å®Ë©±„Åó„Åü„ÅÑ„Åß„Åô„ÄÇ",
    smsVerified: true,
    isOnline: true,
    matchCount: 1,
    actualMeetCount: 0
  },
  {
    name: "Â∞èÊûó„Åï„Åè„Çâ",
    phoneNumber: "+81901234574",
    gender: "female",
    address: "Êù±‰∫¨ÈÉΩ‰∏ñÁî∞Ë∞∑Âå∫",
    location: {
      type: 'Point',
      coordinates: [139.6503, 35.6464] // Setagaya
    },
    profilePhoto: "https://randomuser.me/api/portraits/women/4.jpg",
    bio: "Áä¨„Å®Êï£Ê≠©„Åô„Çã„ÅÆ„ÅåÊó•Ë™≤„Åß„Åôüêï",
    smsVerified: true,
    isOnline: true,
    matchCount: 8,
    actualMeetCount: 4
  },
  {
    name: "Âä†Ëó§ÁøîÂ§™",
    phoneNumber: "+81901234575",
    gender: "male",
    address: "Êù±‰∫¨ÈÉΩÊ±üÊà∏Â∑ùÂå∫",
    location: {
      type: 'Point',
      coordinates: [139.8686, 35.7068] // Edogawa
    },
    profilePhoto: "https://randomuser.me/api/portraits/men/5.jpg",
    bio: "Èá£„Çä„Å®„Ç≠„É£„É≥„Éó„ÅåË∂£Âë≥„ÅÆ„Ç¢„Ç¶„Éà„Éâ„Ç¢Ê¥æ„Åß„ÅôÔºÅ",
    smsVerified: true,
    isOnline: false,
    matchCount: 3,
    actualMeetCount: 1,
    lastSeen: new Date(Date.now() - 1000 * 60 * 15) // 15 minutes ago
  },
  {
    name: "ÊùæÊú¨„ÅÇ„ÅÑ",
    phoneNumber: "+81901234576",
    gender: "female",
    address: "Êù±‰∫¨ÈÉΩÊùâ‰∏¶Âå∫",
    location: {
      type: 'Point',
      coordinates: [139.6365, 35.7003] // Suginami
    },
    profilePhoto: "https://randomuser.me/api/portraits/women/5.jpg",
    bio: "„Ç´„É©„Ç™„Ç±„Å®„ÉÄ„É≥„Çπ„ÅåÂ•Ω„Åç„Åß„Åô‚ô™",
    smsVerified: true,
    isOnline: true,
    matchCount: 9,
    actualMeetCount: 5
  }
];

const seedMapUsers = async () => {
  try {
    console.log('üó∫Ô∏è Starting map users seed...');

    // Connect to database
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/matching-app');
    console.log('üíæ Connected to database');

    // Clear existing map test users
    await User.deleteMany({
      phoneNumber: { $regex: /^\+81901234/ }
    });
    console.log('üóëÔ∏è Cleared existing map test users');

    // Insert new map users
    const insertedUsers = await User.insertMany(mapUsers);
    console.log(`‚úÖ Inserted ${insertedUsers.length} map test users`);

    // Log user locations for verification
    console.log('\nüìç User Locations:');
    insertedUsers.forEach((user, index) => {
      const [lng, lat] = user.location.coordinates;
      console.log(`${index + 1}. ${user.name}: [${lng}, ${lat}] - ${user.address}`);
    });

    console.log('\nüéØ Map seed completed successfully!');
    console.log('You can now test the map functionality with these users.');
    console.log('\nAPI Endpoints to test:');
    console.log('- GET /api/map/config');
    console.log('- GET /api/map/data?lat=35.6762&lng=139.6503&radius=50000');
    console.log('- GET /api/map/location (requires auth)');
    console.log('- POST /api/map/location (requires auth)');

  } catch (error) {
    console.error('‚ùå Map seed error:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå Disconnected from database');
    process.exit(0);
  }
};

// Run if called directly
if (require.main === module) {
  seedMapUsers();
}

module.exports = { seedMapUsers, mapUsers };